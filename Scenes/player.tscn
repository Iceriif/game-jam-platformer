[gd_scene load_steps=6 format=3 uid="uid://c3mccujyv45d2"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_4flbx"]

[sub_resource type="PlaceholderTexture2D" id="PlaceholderTexture2D_onrkg"]
size = Vector2(20, 20)

[sub_resource type="GDScript" id="GDScript_f60y1"]
script/source = "extends Node
class_name StateMachine

@export var initial_state: State
var current_state: State
var states: Dictionary = {}

func _ready() -> void:
	for child in get_children():
		if child is State:
			states[child.name.to_lower()] = child
			child.state_machine = self
			
			
			
			if initial_state:
				change_state(initial_state.name.to_lower())
	pass
	
func _process(delta : float) -> void:
	if current_state:
		current_state.update(delta)
	pass

func _physics_process(delta: float) -> void:
	if current_state:
		current_state.physics_update(delta)
	pass
	
func _input(event: InputEvent) -> void:
	if current_state:
		current_state.handle_input(event)
	pass
	
func change_state(new_state_name: String) -> void:
	if current_state:
		current_state.exit()
		
		
	current_state = states.get(new_state_name.to_lower())
	
	if current_state:
		current_state.enter()
	pass

	
"

[sub_resource type="GDScript" id="GDScript_v0iea"]
script/source = "extends State
class_name JumpState

#jumping
const jumpvel = -760
const jumpdecel = 0.5


func enter():
	var character = state_machine.get_parent()
	character.velocity.y = jumpvel
	
func physics_update(delta):
	var character = state_machine.get_parent()
	
	
	character.velocity.y += 2192 * delta
	
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	character.velocity.x = direction * 300
	
	character.move_and_slide()
	
	if character.is_on_floor():
		if direction != 0:
			state_machine.change_state(\"walkstate\")
		else:
			state_machine.change_state(\"idlestate\")
"

[sub_resource type="GDScript" id="GDScript_cvnsp"]
script/source = "extends State
class_name WalkState

func physics_update(delta):

	var character = state_machine.get_parent()
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")

	if direction == 0:
		state_machine.change_state(\"idlestate\")
		return
		
	character.velocity.x = direction * 300
	character.move_and_slide()
	
func handle_input(event):
	if Input.is_action_just_pressed(\"ui_accept\"):
		state_machine.change_state(\"jumpstate\")
"

[node name="Node2D" type="Node2D"]

[node name="player" type="CharacterBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="player"]
shape = SubResource("RectangleShape2D_4flbx")

[node name="Sprite2D" type="Sprite2D" parent="player"]
texture = SubResource("PlaceholderTexture2D_onrkg")

[node name="State_machine" type="Node" parent="player"]
script = SubResource("GDScript_f60y1")

[node name="Jump" type="Node" parent="player/State_machine"]
script = SubResource("GDScript_v0iea")

[node name="Move" type="Node" parent="player/State_machine"]
script = SubResource("GDScript_cvnsp")

[node name="Dash" type="Node" parent="player/State_machine"]

[node name="Fall" type="Node" parent="player/State_machine"]
